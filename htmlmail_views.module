<?php

/**
 * For custom views fields
 * Implements hook_views_api().
 */
function htmlmail_views_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'htmlmail_views') . '/views',
  );
}

/**
 * Ajax menu callback.
 */
function htmlmail_views_callback($ajax, $view_name, $display) {
  if ($ajax) {
    ctools_include('ajax');
    ctools_include('modal');
	
	$main_view = views_get_view($view_name);	
	if (isset($main_view->display[$display]->display_options['header']['enable_htmlmail_views'])) {
		$arr_view = $main_view->display[$display];
		$a_user = $arr_view->display_options['header']['enable_htmlmail_views']['htmlmail_views_from_user'];
		$a_from = $arr_view->display_options['header']['enable_htmlmail_views']['htmlmail_views_from_alias'];
		$a_link_text = $arr_view->display_options['header']['enable_htmlmail_views']['htmlmail_views_link_text'];
		$a_to = $arr_view->display_options['header']['enable_htmlmail_views']['htmlmail_views_def_recipient'];
		$a_body = $arr_view->display_options['header']['enable_htmlmail_views']['htmlmail_views_body_msg'];
		$a_css = $arr_view->display_options['header']['enable_htmlmail_views']['htmlmail_views_global_css'];
		$a_subject = $arr_view->display_options['header']['enable_htmlmail_views']['htmlmail_views_def_subject'];
	}
	if ($a_user == TRUE) {
		global $user;
		$a_from = $user->mail;
	}
    $form_state = array(
      'ajax' => TRUE,
      'title' => t('Email View'),
	  'view_name' => $view_name,
	  'display_name' => $display,
	  'from_alias' => $a_from,
	  'def_recipient' => $a_to,
	  'body_msg' => $a_body,
	  'globalcss' => $a_css,
	  'subject' => $a_subject,
    );
	
    // Use ctools to generate ajax instructions for the browser to create
    // a form in a modal popup.
    $output = ctools_modal_form_wrapper('htmlmail_views_form', $form_state);
	
    // If the form has been submitted, there may be additional instructions
    // such as dismissing the modal popup.
    if (!empty($form_state['ajax_commands'])) {
      $output = $form_state['ajax_commands'];
    }

    // Return the ajax instructions to the browser via ajax_render().
    print ajax_render($output);
    drupal_exit();
  } else {
    return drupal_get_form('htmlmail_views_form', $view_name);
  }
}

function htmlmail_views_form($form, &$form_state, $view_name) {
 global $user;
 drupal_add_css(drupal_get_path('module', 'htmlmail_views') .'/htmlmail_views.css');

	$form['#id'] = 'htmlmail_views_form';
	$form['email_to'] = array(
		'#weight' => 0,
		'#title' => t('Email To:'),
		'#id' => 'htmlmail_views_email_to',
		'#type' => 'textfield', 
	   '#size'=> 30,
	   '#value' => $form_state['def_recipient'],
	);
	$form['email_from'] = array(
		'#weight' => 1,
		'#title' => t('Email (alias) From:'), 
		'#id' => 'htmlmail_views_email_from',
		'#type' => 'textfield', 
	   '#size'=> 30,
	   '#value' => $form_state['from_alias'],
	);
	$form['email_subject'] = array(
		'#weight' => 2,
		'#title' => t('Subject:'), 
		'#id' => 'htmlmail_views_email_subject',
		'#type' => 'textfield',
	   '#size'=> 30,
	   '#value' => $form_state['subject'],
	);
	$form['global_css'] = array(
		'#type' => 'hidden',
		'#value' => $form_state['globalcss'],
	);
	$form['view_name'] = array(
		'#type' => 'hidden',
		'#value' => $form_state['view_name'],
	);
	$form['body_msg'] = array( 
		'#weight' => 3,
		'#title' => t('Message'),
		'#description' => t('The view will be embedded at the end of this email.'),
		'#type' => 'textarea',
		'#id' => 'htmlmail_views_body_msg',
		'#size'=> 30,
		'#value' => $form_state['body_msg'],
	);

	$form['submit'] = array( 
		'#type' => 'submit', 
		'#weight' => 4,
		'#value' => t('Submit'),
	);
	$form['cancel'] = array( 
		'#type' => 'submit', 
		'#value' => t('Cancel'),
		'#weight' => 5,
	);
 
  return $form; 
}

/**
 * Drupal form submit handler.
 */
function htmlmail_views_form_submit(&$form, &$form_state) {

  // Tell the browser to close the modal.
  $form_state['ajax_commands'][] = ctools_modal_command_dismiss();
  dpm($form_state);
	global $user;
	$to = $form_state['def_recipient'];
	$site_email = variable_get('site_mail', '');
	$from = $form_state['from_alias'];
	$css = $form_state['globalcss'];
	$body = $form_state['body_msg'];
	$view_name = $form_state['view_name'];
	$display = $form_state['display_name'];
	$subject = $form_state['subject'];
	
	drupal_mail
	(
	  // Module
	  'htmlmail_views',
	  // Mail Key
	  'email_view',
	  // The destination dmail address
	  $to,
	  // The language that the mail should be sent in (requires translation if not English)
	  $user->language,
	  // parameters to use in hook_mail()
	  array
	  (
		'to' => $to,
		'from' => $from,
		'body' => $body,
		'css' => $css,
		'subject' => $subject,
		'viewname' => $view_name,
		'display' => $display,
	  )
	);

	if ($form_state['values']['op'] == 'Cancel') {
		return;
	}
 	$form_state['ajax_commands'][] = ajax_command_insert('#htmlmail-views-link', '<div class="ajax-messages"><span class="pos">Email sent!</span></div>');
}

/**
 * Implements hook_ctools_plugin_type().
 */
function htmlmail_views_admin() {
	
//--> BACKEND CONFIGURATION Form

  $form = array();
   
  $markup = 'test markup';

  $form['htmlmail_views_version'] = array(
    '#markup' => $markup,
    '#weight' => -100,
  );
   
   $form['htmlmail_views_contenttype'] = array(
    '#type' => 'textfield',
    '#title' => t('Event Content Type'),
    '#default_value' => variable_get('htmlmail_views_contenttype', 'event'),
    '#size' => 60,
    '#maxlength' => 60,
    '#description' => t("The machine name of the content type to react on"),
    '#required' => TRUE,
  );
 
  $form['#submit'][] = 'htmlmail_views_admin_submit';
  return system_settings_form($form);
}

/**
 * Implements submit handler
 */
function htmlmail_views_admin_submit($form, &$form_state) {

}

/**
 * Implements hook_menu().
 */
function htmlmail_views_menu() {

  $items = array();

  $items['admin/config/htmlmail-views-settings'] = array(
    'title' => 'HTML Mail Settings',
    'description' => 'HTML Mail Settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('htmlmail_views_admin'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
  );	
	$items['email_view/%ctools_js/%/%'] = array(
	'title' => t('Email this'),
    'page callback' => 'htmlmail_views_callback',
    'page arguments' => array(1, 2, 3),
    'access callback' => TRUE,
  );
  return $items; 
}

/**
 * Implements hook_views_pre_render().
 */
function htmlmail_views_views_pre_render(&$view) {	

	if (isset($view->header['enable_htmlmail_views']->options['htmlmail_views_option']) == 1) {
		$view_name = $view->name;
		$display = $view->current_display;
		$a_link_text = $view->query->pager->display->handler->handlers['header']['enable_htmlmail_views']->options['htmlmail_views_link_text'];
		
		ctools_include('ajax');
		ctools_include('modal');
		ctools_modal_add_js();
	
		$href = 'email_view/nojs/' . $view_name;
		$href .= '/'.$display;
		$view->query->pager->display->handler->handlers['header']['enable_htmlmail_views']->options['htmlmail_views_link_text'] = ctools_modal_text_button($a_link_text, $href, 'Email this View', 'ctools-modal-happy-modal-style modal-invoke');		
	}
}

/**
 * Implements hook_mail().
 *
 */
function htmlmail_views_mail ($key, &$message, $params) {
	if($key ==  'email_view') {
		//set headers to HTML - Requires MIMEMAIL
		$message['headers']['MIME-Version'] = '1.0';
		$message['headers']['Content-Type'] = 'multipart/mixed;';
		$message['headers']['Content-Type'] = 'text/html;';
		
		$message['subject'] = $params['subject'];
		
		//load the view - attach it to the end of the body
		$output = views_embed_view($params['viewname'], $params['display']);
		$message['body'][] = '<style>'.$params['css'].'</style>';
		$message['body'][] = $params['body'];
		$message['body'][] = $output;
	}
}

function htmlmail_views_mail_alter(&$message) {
//experimental code used for exporting a view and sending it as an attachment.
//parts of this work perfectly except it also prompts the sending user to download the file :(

//	if ($message['key'] == 'email_view') {

		// $view = views_get_view('accounts');
		// $display = $view->preview('views_data_export_1');
		// $xml_name = 'public://exports/test4.csv'; // xml,pdf,doc etc as you needed
		// $file = file_save_data($display,$xml_name,FILE_EXISTS_REPLACE);
		// dpm($file);
		// $acct = $message['params']['account_name'];
//		$output = views_embed_view('projects', 'page_4');
		// dpm($output);
		// dpm($display);
		//file_unmanaged_save_data($output, 'public://exports/test5.csv', FILE_EXISTS_REPLACE);
//		$message['body'][] = $output;

//		$file_content = file_get_contents('public://exports/test5.csv');
//		$attachments = array(
//		'filecontent' => $file_content,
//		'filename' => 'test5.csv',
//		'filepath' => 'public://exports/test5.csv',
//		'filemime' => 'text/csv',
//		);
//		$message['params']['attachments'][] = $attachments;

//	}
}

/**
 * Implements hook_node_view().
 */
function htmlmail_views_node_view($node, $view_mode, $langcode) {

}

/**
 * Implements hook_form_alter().
 */
function htmlmail_views_form_alter(&$form, &$form_state, $form_id) {

}
